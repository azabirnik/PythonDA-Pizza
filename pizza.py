from random import randint
from typing import Callable, Any


def _log(fmt_str: str) -> Callable:
    """
    –°–æ–∑–¥–∞–µ—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ª–æ–≥–≥–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø–∏—Ü—Ü–µ—Ä–∏–∏
    """

    def decorator(function: Callable) -> Callable:
        def wrapper(*args, **kwargs) -> Any:
            time = randint(1, 5)
            print(fmt_str.format(time))
            return function(*args, **kwargs)

        return wrapper

    return decorator


class Pizza:

    """–†–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã"""

    def __init__(self, pizza: dict, xl=False) -> None:
        """
        –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–æ–≤–∞—Ä—è, –∫–æ—Ç–æ—Ä—ã–π –ø–∞—Ä—Å–∏—Ç—Å—è –∏–∑ yaml
        """
        self.name = pizza["pizza"].lower()
        self.emoji = pizza.get("emoji", "")
        self.ingredients = pizza["ingredients"]
        self.xl = xl

    def dict(self) -> dict:
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å–ª–æ–≤–∞—Ä—å"""
        return {
            "pizza": self.name,
            "emoji": self.emoji,
            "ingredients": self.ingredients,
        }

    def __str__(self) -> str:
        """–°—Ç—Ä–æ–∫–∞ –≤ –º–µ–Ω—é –ø–∏—Ü—Ü–µ—Ä–∏–∏"""
        ingrid = ", ".join(self.ingredients)
        return f"- {self.name.title()} {self.emoji} : {ingrid}"

    def __eq__(self, second) -> bool:
        """
        –°—á–∏—Ç–∞–µ–º —á—Ç–æ –ø–∏—Ü—Ü—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç –µ—Å–ª–∏ –∏—Ö –∏–º–µ–Ω–∞, —Ä–∞–∑–º–µ—Ä—ã –∏ —Å–æ—Å—Ç–∞–≤—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç
        """
        if self.name != second.name:
            return False
        # –≠–º–æ–¥–∂–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        return (
            sorted(self.ingredients) == sorted(second.ingredients)
            and self.xl == second.xl
        )

    @_log("üõµ  –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {}—Å!")
    def delivery(self) -> None:
        """–ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø–∏—Å–∞–Ω–∞ –ª–æ–≥–∏–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–∏—Ü—Ü—ã"""
        pass

    @_log("üè†  –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {}—Å!")
    def pickup(self) -> None:
        """–ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ–ø–∏—Å–∞–Ω–∞ –ª–æ–≥–∏–∫–∞ –∑–∞–±–æ—Ä–∞ –ø–∏—Ü—Ü—ã –∏–∑ –ø–∏—Ü—Ü–µ—Ä–∏–∏"""
        pass

    @_log("üë©‚Äçüç≥  –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {}—Å!")
    def bake(self) -> None:
        """–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–∏—Ü—Ü—ã"""
        pass
